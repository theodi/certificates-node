<%- include('../../partials/header') %>
<section class="content-block white">
  <h1>Certificates for Dataset</h1>
     <p>
     <a class="button btn" href="<%= user ? '/datasets/my' : '/datasets' %>">‚Üê Back to Datasets</a>
   </p>
   <% if (user) { %>
   <p style="margin-bottom: 12px; margin-left: auto; margin-right: auto; text-align: center;">
     <a class="button btn" href="/datasets/<%= datasetId %>/certificates/new">Create new certificate</a>
   </p>
   <% } %>
  <table id="certsTable" class="display" style="width:100%">
    <thead>
      <tr>
        <th width="10%">State</th>
        <th width="10%">Level</th>
        <th width="20%">Certificate</th>
        <th width="10%">Created</th>
        <th width="10%">Updated</th>
        <th width="40%">Actions</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
</section>

<link rel="stylesheet" href="/lib/DataTables/datatables.css" />
<script src="/lib/DataTables/datatables.min.js"></script>
<script>
     let table; // Declare table variable in wider scope
   document.addEventListener('DOMContentLoaded', function() {
     const datasetId = '<%= datasetId %>';
     table = new DataTable('#certsTable', {
      ajax: { url: `/datasets/${datasetId}/certificates`, headers: { 'Accept': 'application/json' } },
      processing: true,
      serverSide: false,
      searching: true,
      ordering: true,
      responsive: true,
      order: [[4, 'desc']],
      columns: [
        { data: 'state' },
        { data: 'levelName' },
        { data: 'surveyTitle' },
        { data: 'createdAt', render: (d) => d ? new Date(d).toISOString().slice(0, 10) : '' },
        { data: 'updatedAt', render: (d) => d ? new Date(d).toISOString().slice(0, 10) : '' },
                 { data: null, render: (row) => {
             const viewLink = `<a class="button btn" href="/datasets/${datasetId}/certificates/${row.id}" target="_blank" rel="noopener">View</a>`;
             const isLoggedIn = <%- JSON.stringify(!!user) %>;
             const isAdmin = <%- JSON.stringify(user && user.admin) || false %>;
             if (isLoggedIn) {
               const deleteLink = `<button class="button btn btn-danger" onclick="deleteCertificate('${datasetId}','${row.id}', '${row.level}')">Delete</button>`;
               const editLink = '<a class="button btn" href="/datasets/' + datasetId + '/certificates/' + row.id + '/edit">Edit</a>';
               const publishLink = `<button class="button btn btn-success" onclick="publishCertificate('${datasetId}','${row.id}', '${row.level}')">Publish</button>`;
               const unpublishLink = `<button class="button btn btn-warning" onclick="unpublishCertificate('${datasetId}','${row.id}', '${row.level}')">Unpublish</button>`;
               let actions = `${viewLink} ${deleteLink}`;
               if (isAdmin) {
                 actions = `${viewLink} ${publishLink} ${unpublishLink} ${deleteLink}`;
               }
               if (row.level > 0 && row.state === 'draft') {
                 actions = viewLink + ' ' + editLink + ' ' + publishLink + ' ' + deleteLink;
               } else if (row.state === 'draft') {
                 actions = viewLink + ' ' + editLink + ' ' + deleteLink;
               } else if (row.state === 'published') {
                 actions = viewLink + ' ' + unpublishLink;
               }
               return actions;
             }
             return viewLink;
           }
         }
      ]
    });
  });

  // Delete certificate function
  async function deleteCertificate(datasetId, certificateId, certificateLevel) {
    if (!confirm(`Are you sure you want to delete this certificate? This action cannot be undone.`)) {
      return;
    }

    try {
      const response = await fetch(`/datasets/${datasetId}/certificates/${certificateId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const result = await response.json();      // Reload the table
        table.ajax.reload();
      } else {
        handleError(response);
      }
    } catch (error) {
      console.error('Error deleting certificate:', error);
      alert('An error occurred while deleting the certificate');
    }
  }
  async function publishCertificate(datasetId, certificateId, certificateLevel) {
    try {
      const response = await fetch(`/datasets/${datasetId}/certificates/${certificateId}/publish`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const result = await response.json();
        table.ajax.reload();
      } else {
        handleError(response);
      }
    } catch (error) {
      console.error('Error publishing certificate:', error);
      alert('An error occurred while publishing the certificate');
    }
  }
  async function unpublishCertificate(datasetId, certificateId, certificateLevel) {
    try {
      const response = await fetch(`/datasets/${datasetId}/certificates/${certificateId}/unpublish`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const result = await response.json();
        table.ajax.reload();
      } else {
        handleError(response);
      }
    } catch (error) {
      console.error('Error unpublishing certificate:', error);
      alert('An error occurred while unpublishing the certificate');
    }
  }

  function handleError(response) {
    let errorMessage = 'Failed to delete certificate';
    switch (response.status) {
      case 400:
        errorMessage = 'Cannot delete certificate: invalid request';
        break;
      case 401:
        errorMessage = 'Authentication required. Please log in again.';
        break;
      case 403:
        errorMessage = 'You do not have permission to delete this certificate';
        break;
      case 404:
        errorMessage = 'Certificate not found';
        break;
      case 500:
        errorMessage = 'Server error occurred while deleting the certificate';
        break;
      default:
        errorMessage = `Failed to delete certificate (HTTP ${response.status})`;
    }
    alert(`Error: ${errorMessage}`);
  }
  </script>
<%- include('../../partials/footer') %>